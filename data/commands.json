[null,{"name":"zglos","permissions":"NONE","restriction":"1","_id":"jsexV","actions":[{"condition":"1","comparison":"0","value":"1","iftrue":"3","iftrueVal":"4","iffalse":"0","iffalseVal":"","name":"Check Parameters"},{"title":"","author":"","color":"","timestamp":"false","url":"","authorIcon":"","imageUrl":"","thumbUrl":"","storage":"1","varName":"embediro_ERROR1","name":"Create Embed Message"},{"storage":"1","varName":"embediro_ERROR1","message":"Oznacz u≈ºytkownika kt√≥rego chcesz zg≈Çosiƒá!","name":"Set Embed Description"},{"storage":"1","varName":"embediro_ERROR1","channel":"0","varName2":"","storage3":"0","varName3":"","name":"Send Embed Message"},{"name":"End Action Sequence"},{"condition":"0","comparison":"2","value":"0","iftrue":"3","iftrueVal":"4","iffalse":"0","iffalseVal":"","name":"Check Parameters"},{"title":"","author":"","color":"","timestamp":"false","url":"","authorIcon":"","imageUrl":"","thumbUrl":"","storage":"1","varName":"embediro_ERROR2","name":"Create Embed Message"},{"storage":"1","varName":"embediro_ERROR2","message":"Napisz pow√≥d zg≈Çoszenia!","name":"Set Embed Description"},{"storage":"1","varName":"embediro_ERROR2","channel":"0","varName2":"","storage3":"0","varName3":"","name":"Send Embed Message"},{"name":"End Action Sequence"},{"storage":"0","varName":"","name":"Delete Message"},{"info":"2","infoIndex":"1","storage":"1","varName":"user","name":"Store Command Params"},{"info":"1","infoIndex":"2","storage":"1","varName":"reason","name":"Store Command Params"},{"info":"1","find":"zgloszenia","storage":"1","varName":"zgloszenia","name":"Find Channel"},{"member":"0","varName":"","info":"1","storage":"1","varName2":"id","name":"Store Member Info"},{"member":"1","varName":"","info":"21","storage":"1","varName2":"user_dodaje","name":"Store Member Info"},{"member":"1","varName":"","info":"16","storage":"1","varName2":"AVATAR_ZGLASZAJACEGO","name":"Store Member Info"},{"member":"0","varName":"","info":"16","storage":"1","varName2":"AVATAR_TYPA","name":"Store Member Info"},{"title":"","author":"Dodano nowe zg≈Çoszenie!","color":"#E60EF1","timestamp":"true","url":"","authorIcon":"${tempVars(\"AVATAR_ZGLASZAJACEGO\")}","imageUrl":"","thumbUrl":"${tempVars(\"AVATAR_TYPA\")}","storage":"1","varName":"reported4","name":"Create Embed Message"},{"storage":"1","varName":"reported4","message":"‚Ä¢ Zg≈ÇaszajƒÖcy: **${tempVars(\"user_dodaje\")}**\n‚Ä¢ Zg≈Çoszony u≈ºytkownik: **${tempVars(\"user\")}**\n‚Ä¢ Pow√≥d zg≈Çoszenia: **${tempVars(\"reason\")}**\n\n","name":"Set Embed Description"},{"storage":"1","varName":"reported4","message":"‚úÖ = Wykonano! ‚Ä¢ ‚ùå = Sprawa nie dla helpera! ‚Ä¢ üëé = Odrzucamy!","footerIcon":"","name":"Set Embed Footer"},{"storage":"1","varName":"reported4","channel":"5","varName2":"zgloszenia","storage3":"0","varName3":"","name":"Send Embed Message"},{"channel":"0","varName":"","message":"**Dziƒôkujemy!** Twoje zg≈Çoszenie zosta≈Ço wys≈Çane do naszej administracji.","storage":"1","varName2":"send","name":"Send Message"},{"channel":"3","varName":"zgloszenia","info":"4","storage":"1","varName2":"lastmsg","name":"Store Channel Info"},{"storage":"1","varName":"lastmsg","emoji":"4","varName2":"‚úÖ","varName3":"","name":"Add Reaction"},{"storage":"1","varName":"lastmsg","emoji":"4","varName2":"‚ùå","varName3":"","name":"Add Reaction"},{"storage":"1","varName":"lastmsg","emoji":"4","varName2":"üëé","varName3":"","name":"Add Reaction"},{"time":"5","measurement":"1","name":"Wait"},{"storage":"1","varName":"send","name":"Delete Message"}],"comType":"0"},{"name":"sugestia","permissions":"NONE","restriction":"1","_id":"BqzYz","actions":[{"info":"0","find":"526838351601598485","storage":"1","varName":"kanal","name":"Find Channel"},{"member":"1","varName":"","info":"21","storage":"1","varName2":"user_tag","name":"Store Member Info"},{"member":"1","varName":"","info":"16","storage":"1","varName2":"avatar_URL","name":"Store Member Info"},{"info":"1","infoIndex":"1","storage":"1","varName":"propozycja_tresc","name":"Store Command Params"},{"condition":"0","comparison":"1","value":"1","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"4","name":"Check Parameters"},{"title":"","author":"","color":"","timestamp":"false","url":"","authorIcon":"","imageUrl":"","thumbUrl":"","storage":"1","varName":"embed_blad","name":"Create Embed Message"},{"storage":"1","varName":"embed_blad","message":"**B≈ÇƒÖd:** Napisz swojƒÖ sugestie!","name":"Set Embed Description"},{"storage":"1","varName":"embed_blad","channel":"0","varName2":"","storage3":"0","varName3":"","name":"Send Embed Message"},{"name":"End Action Sequence"},{"storage":"1","varName":"kolorki","name":"Generate Random Hex Color"},{"member":"0","varName":"","info":"4","storage":"1","varName2":"kolor","name":"Store Member Info"},{"title":"","author":"${tempVars(\"user_tag\")}","color":"${tempVars(\"kolorki\")}","timestamp":"false","url":"","authorIcon":"${tempVars(\"avatar_URL\")}","imageUrl":"","thumbUrl":"","storage":"1","varName":"propozycja_embed","name":"Create Embed Message"},{"storage":"1","varName":"propozycja_embed","message":"${tempVars(\"propozycja_tresc\")}","name":"Set Embed Description"},{"storage":"1","varName":"propozycja_embed","message":"‚úÖ Jestem za! ‚Ä¢ ‚ùå Jestem przeciw!","footerIcon":"","name":"Set Embed Footer"},{"storage":"1","varName":"propozycja_embed","channel":"5","varName2":"kanal","storage3":"1","varName3":"wiadomosc_sended","name":"Send Embed Message"},{"storage":"1","varName":"wiadomosc_sended","emoji":"4","varName2":"‚úÖ","varName3":"","name":"Add Reaction"},{"storage":"1","varName":"wiadomosc_sended","emoji":"4","varName2":"‚ùå","varName3":"","name":"Add Reaction"},{"time":"2","measurement":"1","name":"Wait"},{"storage":"0","varName":"","name":"Delete Message"}]},{"name":"CoronaVirus","permissions":"ADMINISTRATOR","restriction":"1","_id":"CMbqG","actions":[{"token":"","user":"","pass":"","url":"https://coronavirus-19-api.herokuapp.com/all","path":"cases","storage":"1","varName":"SwiatPotwierdzone","debugMode":"1","headers":"","name":"Store Json From WebAPI"},{"token":"","user":"","pass":"","url":"https://coronavirus-19-api.herokuapp.com/all","path":"deaths","storage":"1","varName":"SwiatZgony","debugMode":"1","headers":"","name":"Store Json From WebAPI"},{"token":"","user":"","pass":"","url":"https://coronavirus-19-api.herokuapp.com/all","path":"recovered","storage":"1","varName":"SwiatWyleczeni","debugMode":"1","headers":"","name":"Store Json From WebAPI"},{"token":"","user":"","pass":"","url":"https://coronavirus-19-api.herokuapp.com/countries/Poland","path":"cases","storage":"1","varName":"PolskaPotwierdzone","debugMode":"1","headers":"","name":"Store Json From WebAPI"},{"token":"","user":"","pass":"","url":"https://coronavirus-19-api.herokuapp.com/countries/Poland","path":"deaths","storage":"1","varName":"PolskaZgony","debugMode":"1","headers":"","name":"Store Json From WebAPI"},{"token":"","user":"","pass":"","url":"https://coronavirus-19-api.herokuapp.com/countries/Poland","path":"recovered","storage":"1","varName":"PolskaWyleczeni","debugMode":"1","headers":"","name":"Store Json From WebAPI"},{"title":"CoronaStats","author":"","color":"#54F952","timestamp":"true","url":"","authorIcon":"","imageUrl":"","thumbUrl":"","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","message":"üåê ≈öwiat:\n\n\\ü¶† Potwierdzone: **${tempVars(\"SwiatPotwierdzone\")}**\n\\üíÄ Zgony: **${tempVars(\"SwiatZgony\")}**\n\\üíñ Wyleczeni: **${tempVars(\"SwiatWyleczeni\")}**\n\nüáµüá± Polska:\n\n\\ü¶† Potwierdzone: **${tempVars(\"PolskaPotwierdzone\")}**\n\\üíÄ Zgony: **${tempVars(\"PolskaZgony\")}**\n\\üíñ Wyleczeni: **${tempVars(\"PolskaWyleczeni\")}**","name":"Set Embed Description"},{"storage":"1","varName":"embed","channel":"0","varName2":"","name":"Send Embed Message"}],"comType":"0"},{"name":"say","permissions":"ADMINISTRATOR","restriction":"1","_id":"MImWM","actions":[{"condition":"0","comparison":"2","value":"0.1","iftrue":"3","iftrueVal":"3","iffalse":"0","iffalseVal":"","name":"Check Parameters"},{"title":"**k!say [wiadomosc]**","author":"","color":"RED","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"","timestamp":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"embed poprawnie","name":"Create Embed Message"},{"storage":"1","varName":"embed poprawnie","channel":"0","varName2":"","storage3":"0","varName3":"","name":"Send Embed Message"},{"name":"End Action Sequence"},{"info":"1","infoIndex":"1","storage":"1","varName":"text","name":"Store Command Params"},{"channel":"0","varName":"","message":"${tempVars(\"text\")}","storage":"0","varName2":"","iffalse":"0","iffalseVal":"","name":"Send Message"},{"storage":"0","varName":"","name":"Delete Message"}],"comType":"0"},{"name":"rep","permissions":"NONE","restriction":"1","actions":[{"member":"1","varName":"","info":"0","storage":"1","varName2":"author","name":"Store Member Info"},{"member":"1","varName":"","info":"1","storage":"1","varName2":"id author","name":"Store Member Info"},{"message":"0","varName":"","info":"1","ParamN":"1","separator":"","storage":"1","varName2":"wiadomo≈õƒá","name":"Store Message Params"},{"condition":"1","comparison":"0","value":"1","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"13","name":"Check Parameters"},{"storage":"1","varName":"wiadomo≈õƒá","comparison":"5","value":"tempVars(\"id author\")","iftrue":"2","iftrueVal":"13","iffalse":"0","iffalseVal":"","name":"Check Variable"},{"member":"0","varName":"","info":"0","varName2":"","iftrue":"2","iftrueVal":"13","iffalse":"0","iffalseVal":"","name":"Check If Member"},{"member":"0","varName":"","dataName":"reputacja","defaultVal":"0","storage":"3","varName2":"reputacja data","name":"Store Member Data"},{"member":"0","varName":"","dataName":"reputacja","changeType":"1","value":"1","name":"Control Member Data"},{"member":"0","varName":"","dataName":"reputacja","defaultVal":"0","storage":"3","varName2":"reputejszyn","name":"Store Member Data"},{"member":"0","varName":"","info":"0","storage":"1","varName2":"oznaczony","name":"Store Member Info"},{"channel":"0","varName":"","message":"**${tempVars(\"author\")} da≈Ç/a reputacjƒô ${tempVars(\"oznaczony\")}!**","storage":"0","varName2":"","iffalse":"0","iffalseVal":"","name":"Send Message"},{"name":"End Action Sequence"},{"channel":"0","varName":"","message":"**Oznacz osobƒô kt√≥rej chcesz daƒá reputacjƒô!**","storage":"0","varName2":"","iffalse":"0","iffalseVal":"","name":"Send Message"}],"_id":"deLXs"},{"name":"reputacja","permissions":"NONE","restriction":"1","actions":[{"condition":"1","comparison":"0","value":"1","iftrue":"2","iftrueVal":"5","iffalse":"0","iffalseVal":"","name":"Check Parameters"},{"member":"1","varName":"","dataName":"reputacja","defaultVal":"0","storage":"3","varName2":"reputacja data sprawdzanie","name":"Store Member Data"},{"channel":"0","varName":"","message":"**Reputacja ${member}:**\n ``${globalVars(\"reputacja data sprawdzanie\")}``","storage":"0","varName2":"","iffalse":"0","iffalseVal":"","name":"Send Message"},{"name":"End Action Sequence"},{"member":"0","varName":"","dataName":"reputacja","defaultVal":"0","storage":"3","varName2":"reputacja oznaczonej","name":"Store Member Data"},{"channel":"0","varName":"","message":"**Reputacja ${mentionedUser}:**\n ``${globalVars(\"reputacja oznaczonej\")}``","storage":"0","varName2":"","iffalse":"0","iffalseVal":"","name":"Send Message"}],"_id":"QOYxT"},{"name":"ping","permissions":"ADMINISTRATOR","restriction":"1","_id":"wObAa","actions":[{"info":"5","storage":"1","varName2":"dxter-ping","name":"Store Bot Client Info"},{"info":"27","storage":"1","varName2":"dxter-ram","name":"Store Bot Client Info"},{"title":"Dexter - ping","author":"","color":"#242625","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"","timestamp":"true","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"dxter-ping-cmd","name":"Create Embed Message"},{"storage":"1","varName":"dxter-ping-cmd","message":"**Ping:** ``${tempVars(\"dxter-ping\")}``\n**Client RAM:** ``${tempVars(\"dxter-ram\")}`` MB","name":"Set Embed Description"},{"storage":"1","varName":"dxter-ping-cmd","channel":"0","varName2":"","storage3":"0","varName3":"","iffalse":"0","iffalseVal":"","messageContent":"","name":"Send Embed Message"}]},{"name":"rolemenu","permissions":"ADMINISTRATOR","restriction":"1","_id":"DtBMG","actions":[{"behavior":"1","interpretation":"1","code":"const Discord = require(\"discord.js\");\nconst fs = require('fs');\n\nvar rectarray = globalVars('reactionRoleInf');\n\nvar reactionArray = [];\nvar emojiArray = [];\nvar roleArray = [];\nvar embedSettings = [];\n\nconst _this = this;\n\nvar errorCatch = 5;\nvar emojiTimerRe = 0;\n\nvar localEmoji;\nvar localEmojiG;\nvar interval;\nvar mainMessage;\n\n\nlet embedTemplate = {\n    color: 0x00FF00,\n    author: {\n        name: client.user.username,\n        icon_url: client.user.avatarURL\n    },\n    title: \"Role Reaction Prompt\",\n    description: `Welcome to the autorole promt.\\n\\nPlease now respond with a **title** for your reaction embed!`,\n    timestamp: new Date(),\n};\n\n// Settings\nlet grabAllEmoji = false; // Default: false || Set true if you want the bot to use global emojis from all the servers its in. (May cause slowdowns in larger servers)\nlet roleLimit = 10; // Default: 10 || Sets the maximum number of roles attached to emojis.\nlet debug = false; // Default: false || Prints any errors that may have occured; will also print for await messages that ran out of time\n//\n\nif (grabAllEmoji) {\n    localEmoji = (client || this.getDBM().Bot.bot).emojis.cache.array();\n    localEmojiG = \"Please make sure the emoji you selected is in one of the servers that the bot is in!\";\n} else {\n    localEmoji = msg.guild.emojis.cache.array();\n    localEmojiG = \"Please make sure the emoji you selected is in this server!\";\n}\n\nif (msg.member.hasPermission('MANAGE_ROLES')) {\n    msg.channel.send({embed: embedTemplate})\n        .then(async (message) => {\n            mainMessage = message;\n            askQuestion(`Welcome to the autorole promt.\\n\\nPlease now respond with a **title** for your reaction embed!`).then((response) => {\n                embedSettings[0] = response.content;\n                askQuestion(`Your embed title would be **${response.content}**\\n\\nIf you are sure with this title, please now respond with a **description** for your embed.\\nIf not, please respond with \"**cancel**\"`).then((response) => {\n                    embedSettings[1] = response.content;\n                    if (response.content.toLowerCase() != \"cancel\") {\n                        askQuestion(`Your embed title would be **${embedSettings[0]}** and your description would be:\\n\\n${embedSettings[1]}\\n\\nIf you are satisfyed with this, please respond with \"**confirm**\".\\nIf not, please respond with \"**cancel**\".`).then((response) => {\n                            if (response.content.toLowerCase() == \"confirm\") {\n                                reAsk(message, \" \");\n                            } else {\n                                errorMessage('Prompt cancelled by user request (did not respond with \"confirm\").\\nPlease re-execute the command to go through the prompt again!', \"User did not respond with confirm on description + title conformation message\");\n                            }\n                        })\n                    } else {\n                        errorMessage(\"Prompt has been cancelled by user request.\\nPlease re-execute the command to go through the prompt again!\", \"User responded with cancel thus cancelling the prompt\");\n                    }\n                })\n            })\n        })\n} else {\n    errorMessage(\"You do not have the `MANAGE ROLES` perimssion which is required to execute this command!\", \"User has no permission to execute the command.\");\n}\n\nfunction reAsk(message, extra) {\n    if (extra == null) {\n        extra = \"\";\n    }\n    if (reactionArray.length != roleLimit) {\n        var finalText = \"\";\n        reactionArray.forEach(subarray => {\n            finalText = finalText + `${subarray[0]} => ${subarray[2]}\\n`\n        })\n        askQuestion(`Please now enter the **emoji-role** reaction connections (Max ${roleLimit})\\n ${finalText}\\n\\nIf you would like to attach another reaction to a role, please insert a role along with an emoji.\\nEx. ExampleRole üòÉ\\nIf not, please reply with \"**done**\".\\nIf you would like to cancel the prompt, please respond with \"cancel\"\\n\\n${extra}`).then(async (response) => {\n            if (response.content.toLowerCase() == \"done\") {\n                if (reactionArray.length > 0) {\n                    done(message);\n                } else {\n                    errorCheck(message, `**Please atleast attach 1 emoji to 1 role!\\nTries left - ${errorCatch}**`, \"Prompt has been cancelled, you used the same emoji twice for differnt roles!\\nPlease re-execute the command to go through the prompt again!\");\n                }\n            } else if (response.content.toLowerCase() == \"cancel\") {\n                errorMessage(\"Prompt has been cancelled.\\nPlease re-execute the command to go through the prompt again!\", \"User responded with cancel thus cancelling the prompt\", message);\n            } else {\n                var regString = response.content;\n                var execReg = /[^\\x00-\\x7F]/g.exec(regString) || /\\<:(.*?)\\>/g.exec(regString) || /\\<a:(.*?)\\>/g.exec(regString);\n                var msgSplitArr = null;\n\n                if (execReg != null) {\n                    msgSplitArr = [regString.substring(0, execReg[\"index\"]), regString.substring(execReg[\"index\"])];\n                }\n\n                if (msgSplitArr != null && msgSplitArr.length > 1 && msgSplitArr[0] != null && msgSplitArr[1] != null) {\n                    const tstValidRole = await msg.guild.roles.cache.find(role => role.name === msgSplitArr[0].replace(/\\s+$/, ''));\n\n                    if (response.mentions.roles.first() || tstValidRole != null) {\n                        var unicodeStored = msgSplitArr[1];\n                        if (response.mentions.roles.first() != null) {\n                            roleMentioned = response.mentions.roles.first();\n                        } else {\n                            roleMentioned = tstValidRole;\n                        }\n                        if (!roleArray.includes(roleMentioned.id) && !emojiArray.includes(unicodeStored)) {\n                            if (unicodeStored.includes(\"<:\") || unicodeStored.includes(\"<a:\")) {\n                                var emoji;\n\n                                unicodeStored = unicodeStored.replace(/\\D/g, '');\n                                emoji = localEmoji.filter(emojiT => emojiT.id == unicodeStored);\n                                if (emoji.length > 0) {\n                                    unicodeStored = emoji[0];\n                                    delete unicodeStored['guild']\n                                    reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                    emojiArray.push(unicodeStored);\n                                    roleArray.push(roleMentioned.id);\n                                    reAsk(message);\n                                } else {\n                                    errorCheck(message, `**Please provide a valid custom emoji!\\n${localEmojiG}\\nTries left - ${errorCatch}**`, `Prompt has been cancelled, you provided an invalid custom emoji!\\n${localEmojiG}\\nPlease re-execute the command to go through the prompt again!`)\n                                }\n                            } else {\n                                reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                emojiArray.push(unicodeStored);\n                                roleArray.push(roleMentioned.id);\n                                reAsk(message);\n                            }\n                        } else {\n                            errorCheck(message, `**Please don't use the same emoji/role twice!\\nTries left - ${errorCatch}**`, \"Prompt has been cancelled, you used the same role twice in the prompt!\\nPlease re-execute the command to go through the prompt again!\");\n                        }\n                    } else {\n                        errorCheck(message, `**Please mention a valid role!\\nTries left - ${errorCatch}**`, \"Prompt has been cancelled, you didn't mention a valid role!\\nPlease re-execute the command to go through the prompt again!\");\n                    }\n                } else {\n                    errorCheck(message, `**Please provide a valid emoji/role!\\nTries left - ${errorCatch}**`, \"Prompt has been cancelled, you didn't provide a emoji/mentioned role!\\nPlease re-execute the command to go through the prompt again!\");\n                }\n            }\n        });\n    } else {\n        done(message);\n    }\n}\n\n\nfunction done(message) {\n    var finalText = \"\";\n    reactionArray.forEach(subarray => {\n        finalText = finalText + `${subarray[0]} => ${subarray[2]}\\n`\n    })\n\n    askQuestion(`Final conformation menu\\n\\nBelow is the list of reactions to their roles\\n${finalText}\\n\\nIf this is correct, please respond with a **mention** to a **text channel** where the role menu will be sent.\\nIf this isn't correct, respond with \"**cancel**\" to cancel the prompt.`).then ((response) => {\n        if (response.mentions.channels.first()) {\n            var menchannel = response.mentions.channels.first()\n            message.delete();\n            menchannel.send({embed: {\n                    color: 0xffff00,\n                    title: embedSettings[0],\n                    description: `${embedSettings[1]}\\n\\n${finalText}`,\n                    timestamp: new Date()\n                }})\n                .then(embedmessage => {\n                    interval = setInterval(function() {\n                        emojiTimerInt(embedmessage, reactionArray);\n                    }, 500)\n                    rectarray[embedmessage.id] = reactionArray\n                    _this.storeValue(rectarray, 3, \"reactionRoleInf\", cache);\n                    fs.writeFile(\"./data/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                        if (err) {\n                            return console.log(err);\n                        }\n                    });\n                });\n        } else {\n            errorMessage(\"You did not mention a valid channel!\\nPlease re-execute the command to go through the prompt again!\", \"User did not respond with a valid channel and thus cancelling the prompt.\", message);\n        }\n    });\n}\n\nfunction emojiTimerInt(message, subarray) {\n    message.react(subarray[emojiTimerRe][0])\n    emojiTimerRe += 1;\n\n    if (emojiTimerRe == subarray.length) {\n        clearInterval(interval);\n    }\n}\n\nfunction errorMessage(error, errorCause = \"none\") {\n\n    if (debug) {\n        console.log(errorCause);\n    }\n\n    if (mainMessage != null) {\n        mainMessage.delete();\n    }\n\n    let errorTemplate = {\n        color: 0xFF0000,\n        author: {\n            name: client.user.username,\n            icon_url: client.user.avatarURL\n        },\n        title: \"Role Reaction Prompt\",\n        description: error,\n        timestamp: new Date(),\n    };\n\n    msg.channel.send({embed: errorTemplate});\n}\n\nfunction errorCheck(mainMessage, erMsgCatch, erMsgFail) {\n    if (errorCatch > 0) {\n        errorCatch -= 1;\n        reAsk(mainMessage, erMsgCatch)\n    } else {\n        errorMessage(erMsgFail, \"User ran out of attempts and thus the prompt get cancelled.\", mainMessage);\n    }\n}\n\n\nfunction askQuestion(question) {\n    return new Promise(function(resolve, reject) {\n        embedTemplate[\"description\"] = question;\n        mainMessage.edit({embed: embedTemplate});\n        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                max: 1,\n                time: 60000,\n                errors: ['time'],\n            })\n            .then(function(collected) {\n                msg.author.lastMessage.delete();\n                resolve(collected.first());\n            }).catch((error) => {\n                errorMessage('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!', error);\n            });\n    })\n\n}","storage":"0","varName":"","name":"Run Script"}],"comType":"0"},{"name":"clear","permissions":"ADMINISTRATOR","restriction":"1","_id":"ntcIt","actions":[{"info":"0","infoIndex":"1","storage":"1","varName":"clear","name":"Store Command Params"},{"channel":"0","count":"${tempVars(\"clear\")}","condition":"0","custom":"","varName":"","name":"Delete Bulk Messages"},{"storage":"0","varName":"","reason":"","name":"Delete Message"}]}]